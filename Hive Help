This is the file to find HIVE commands
most used HIVE functions or queries.

select count(columnname) from tablename

select count(DISTINCT columnname) from tablename

select * from tablename where name like ''

select * from tablename where id =''

select * from tablename where attribute1 != 'null'

select * from tablename where to_date(stringdate columnname)='anydate'

select cast(from_unixtime(unix_timestamp(weekendingdate,'yyyy-MM-dd' )) as timestamp)week_ending

select case when empnum1='11087' then '110877' else empnum1 end empnum1,firstname,lastname,officename,dentry,..... from ..

select cast(dentry as string) dentry,cast(mintime as string) mintime from...

select empnum1,dentry,substr(cast(mintime as string),11) mintime from....

select empnum1,floor(((UNIX_TIMESTAMP(cast(maxtime as string),'yyyy-MM-dd HH:mm:ss')) -(UNIX_TIMESTAMP(cast(mintime as string),'yyyy-MM-dd HH:mm:ss')) )/3600) totaltimeinhours from...


select empnum1,MAX( cast(second(cast(FROM_UNIXTIME(UNIX_TIMESTAMP(referencetime,'HH:mm:ss')) as timestamp)) as bigint)) Maxtime from...

select empnum1,to_date(cast(FROM_UNIXTIME(UNIX_TIMESTAMP(dentry1,'MM/dd/yyyy') ) as timestamp))dentry from ...

create table newTablenameonly as select * from existingView

ALTER table tablename CHANGE old_columnName new_columnName columnDataType
--to rename a column in hive

--send hive table data to .csv
hive -e 'set hive.cli.print.header=true; select * from your_TableName' | sed 's/[\t]/,/g'  > /home/yourfile.csv



INSERT INTO TABLE students  VALUES ('fred flintstone', 35, 1.28), ('barney rubble', 32, 2.32);
--- this command works from hive 0.14

LINK:  https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF

 Comments in hive scripts can be specified using the "--" prefix.
 
 Datatypes in hive: https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types
 
 hive -e "select * from people limit 10"
 

 #--this is for loading CSV with commas in quoted fields into hive
CREATE TABLE my_table77(a string, b string)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
WITH SERDEPROPERTIES (
   "separatorChar" = "\t",
   "quoteChar"     = "'",
   "escapeChar"    = "\\"
)

#--https://cwiki.apache.org/confluence/display/Hive/CSV+Serde


#--to check hive version type this in hive
set system:sun.java.command;

CURRENT INSTALLED HIVE VERSION IS 0.10


select * from (select name,applicationname, 'Dreamweaver' as gruopL1 from adobe_complete)a where instr(lower(applicationname),'dreamweaver')>0

----------------------------------------
# if u have a date column in your excel data , for example you have a data with 2 columns (EmpName, Joining) and joining column has both date & time then

first convert the date format of Joining column in excel to "yyyy-MM-dd HH:mm:ss"
then, create tab delimited file of it and load it into hive in a table with command:
			"create table abhay(EMP string,Start string) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t' STORED AS TEXTFILE "
			
and then create a view "create view abhay2 as select start, cast(from_unixtime(unix_timestamp(start)) as timestamp)start_time from abhay"

OR

	"create view abhay2 as select start, from_unixtime(CAST(unix_timestamp(start) AS BIGINT), 'yyyy-MM-dd HH:mm:ss') start_time from abhay"


but if u only want the date pat and not time then
	"create view abhay2 as select start, to_date(from_unixtime(CAST(unix_timestamp(start) AS BIGINT), 'yyyy-MM-dd HH:mm:ss')) start_time from abhay"

Now the start_time column will be considered as a "date-time" 

NOTICE : we have done this becoz in TABLEAU there is a bug. suppose we directly use table abhay rather than abhay2, then start will be a string and
you will convert it to a date-time field in tableau and use it in calculations.But as soon as u refresh the data calaculations will return null.
So its better to convert string to date in hive only.
--------------------------------------------------------------- 
select start,cast(from_unixtime(unix_timestamp(start)) as timestamp)start_date,
cast(hour(cast(from_unixtime(unix_timestamp(start)) as timestamp))as bigint)hr, 
cast(minute(cast(from_unixtime(unix_timestamp(start)) as timestamp))as bigint)min,
cast(second(cast(from_unixtime(unix_timestamp(start)) as timestamp))as bigint)sec,cast(start as timestamp)start1 from abhay

----------------------- from abhay & sir

select start_time,cast(FROM_UNIXTIME(UNIX_TIMESTAMP(start_time,'dd-MMM-yyyy hh:mm:ss'),'yyyy-MM-dd HH:mm:ss' ) as timestamp)RDate  from service_now2 limit 10;

select start_time,cast(FROM_UNIXTIME(UNIX_TIMESTAMP(start_time,'dd-MMM-yyyy hh:mm:ss')) as timestamp)RDate  from service_now2 limit 10;

small h i.e hh represents 12 hour format in hive timestamp
big h i.e HH represents 24 hour format in hive timestamp


------------------------------------------JOINS & UNION----------------------------------
create or replace view adobe_cce as
select * from (
select 
	adobeper_mac.Name AS Name,
	adobeper_mac.User AS User,
	adobeper_mac.os_name AS OSName,
	adobeper_mac.Hardware_serial_number AS Hardware_serial_number,
	adobeper_mac.Hyperioncode AS HyperionCode,
	adobeper_mac.App_name AS ApplicationName,
	adobeper_mac.App_version AS ApplicationVersion,
	adobeper_mac.Client_date AS Client_date,
	adobeper_mac.Create_date AS Create_date,
	adobeper_mac.Region AS Region, 
	"Mac" as Os from adobeper_mac
UNION ALL
select	
	adobeper_pc.Name AS Name,
	adobeper_pc.UserId AS User,
	adobeper_pc.OS_Name AS OSName,
	adobeper_pc.Hardware_serial_number AS Hardware_serial_number,
	adobeper_pc.HyperionCode AS HyperionCode,
	adobeper_pc.Application_Name AS ApplicationName,
	adobeper_pc.Application_version AS ApplicationVersion,
	adobeper_pc.Client_date AS Client_date,
	adobeper_pc.Create_date AS Create_date,
	adobeper_pc.Region AS Region, 
	"Win" as Os from adobeper_pc)bb
------------------------------------------------------------
create or replace view adobe_join as 
select * from 
(select * from adobe_cce)a
LEFT OUTER JOIN
(select * from grps)b
ON lower(a.ApplicationName) = lower(b.AppName)

-------------------------------------

--------------Finding uncommon b/w adobeAA and adobein2-----
create or replace view uncommonAdobeAA as select* from(
select a.* from adobeAA a left outer join adobein2 b on lower(a.name) = lower(b.name1) where b.name1 is null
UNION ALL
select a.name,a.user,a.osname,a.hardware_serial_number,a.hyperioncode,a.applicationname,a.applicationversion,a.client_date,
a.create_date,a.region,a.os,a.groupl1 from adobein2 a left outer join adobeAA b on lower(a.Name) = lower(b.Name) where b.name is null)t

------------





------------------------------------
 create or replace view viewname as select * from....
